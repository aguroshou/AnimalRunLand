// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace BeefDefine.FlatBufferSchema
{

using global::System;
using global::BeefDefine.FlatBuffers;

public struct StringDictionary : IFlatbufferObject
{
    private Table __p;
    public ByteBuffer ByteBuffer
    {
        get
        {
            return __p.bb;
        }
    }
    public static StringDictionary GetRootAsStringDictionary(ByteBuffer _bb)
    {
        return GetRootAsStringDictionary(_bb, new StringDictionary());
    }
    public static StringDictionary GetRootAsStringDictionary(ByteBuffer _bb, StringDictionary obj)
    {
        return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb));
    }
    public void __init(int _i, ByteBuffer _bb)
    {
        __p.bb_pos = _i;
        __p.bb = _bb;
    }
    public StringDictionary __assign(int _i, ByteBuffer _bb)
    {
        __init(_i, _bb);
        return this;
    }

    public StringKeyValue ? KeyValueList(int j)
    {
        int o = __p.__offset(4);
        return o != 0 ? (StringKeyValue ?)(new StringKeyValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null;
    }
    public int KeyValueListLength
    {
        get
        {
            int o = __p.__offset(4);
            return o != 0 ? __p.__vector_len(o) : 0;
        }
    }
    public StringKeyValue ? KeyValueListByKey(string key)
    {
        int o = __p.__offset(4);
        return o != 0 ? StringKeyValue.__lookup_by_key(__p.__vector(o), key, __p.bb) : null;
    }

    public static Offset<StringDictionary> CreateStringDictionary(FlatBufferBuilder builder,
            VectorOffset KeyValueListOffset = default(VectorOffset))
    {
        builder.StartObject(1);
        StringDictionary.AddKeyValueList(builder, KeyValueListOffset);
        return StringDictionary.EndStringDictionary(builder);
    }

    public static void StartStringDictionary(FlatBufferBuilder builder)
    {
        builder.StartObject(1);
    }
    public static void AddKeyValueList(FlatBufferBuilder builder, VectorOffset KeyValueListOffset)
    {
        builder.AddOffset(0, KeyValueListOffset.Value, 0);
    }
    public static VectorOffset CreateKeyValueListVector(FlatBufferBuilder builder, Offset<StringKeyValue>[] data)
    {
        builder.StartVector(4, data.Length, 4);

        for (int i = data.Length - 1; i >= 0; i--)
        {
            builder.AddOffset(data[i].Value);
        }

        return builder.EndVector();
    }
    public static void StartKeyValueListVector(FlatBufferBuilder builder, int numElems)
    {
        builder.StartVector(4, numElems, 4);
    }
    public static Offset<StringDictionary> EndStringDictionary(FlatBufferBuilder builder)
    {
        int o = builder.EndObject();
        return new Offset<StringDictionary>(o);
    }
};


}
